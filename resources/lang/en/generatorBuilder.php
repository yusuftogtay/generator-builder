<?php

return [
    'actions' => 'Actions',
    'fields' => 'Fields',
    'model_name' => 'Model Name',
    'model_name_place_holder' => 'Enter Name',
    'model_name_helper' => 'Enter Model Name',
    'generation_type' => 'Generation Type',
    'generation_type_select' => 'Select Generation Type',
    'generation_type_helper' => 'Select Generation Type',
    'table_name' => 'Table Name',
    'table_name_place_holder' => 'Enter Table Name',
    'table_name_helper' => 'Enter Table Name',
    'prefix' => 'Prefix',
    'prefix_place_holder' => 'Enter Prefix',
    'prefix_helper' => 'Enter Prefix',
    'paginate' => 'Paginate',
    'paginate_helper' => 'Paginate with count',
    'fields_title' => 'Fields',
    'field_name' => 'Field Name',
    'db_type' => 'Database Type',
    'db_type_select' => 'Select Database Type',
    'html_type' => 'HTML Type',
    'html_type_select' => 'Select HTML Type',
    'primary' => 'Primary',
    'is_foreign' => 'Is Foreign',
    'foreign_table_select' => 'Select Model',
    'foreign_key' => 'Foreign Key',
    'foreign_key_place_holder' => 'Select Foreign Key',
    'searchable' => 'Searchable',
    'fillable' => 'Fillable',
    'in_form' => 'In Form',
    'in_index' => 'In Index',
    'fields' => [
        'accepted' => 'Accepted',
        'accepted_helper' => 'The field under validation must be "yes", "on", 1, or true. This is useful for validating "Terms of Service" acceptance or similar fields.',
        'active_url' => 'Active Url',
        'active_url_helper' => 'The field under validation must have a valid A or AAAA record according to the dns_get_record PHP function.',
        'boolean' => 'Boolean',
        'boolean_helper' => 'The field under validation must be able to be cast as a boolean. Accepted input are true, false, 1, 0, "1", and "0".',
        'date' => 'Date',
        'date_helper' => 'The field under validation must be a valid date according to the strtotime PHP function.',
        'declined' => 'Declined',
        'declined_helper' => 'The field under validation must be "no", "off", 0, or false.',
        'distinct' => 'Distinct',
        'distinct_helper' => 'The field under validation must be unique among all of the other values of the field under validation in the database.',
        'email' => 'Email',
        'email_helper' => 'The field under validation must be formatted as an e-mail address.',
        'enum' => 'Enum',
        'enum_helper' => 'The field under validation must be included in the given list of enum values.',
        'file' => 'File',
        'file_helper' => 'The field under validation must be',
        'image' => 'Image',
        'image_helper' => 'The field under ',
        'array' => 'Array',
        'array_helper' => 'The field under validation must be a PHP array.',
        'integer' => 'Integer',
        'integer_helper' => 'The field under validation must be an integer.',
        'ip' => 'Ip',
        'ip_helper' => 'The field under validation must be an IP address.',
        'json' => 'Json',
        'json_helper' => 'The field under validation must be a valid JSON string.',
        'ipv4' => 'Ipv4',
        'ipv4_helper' => 'The field under validation must be an IPv4 address.',
        'ipv6' => 'Ipv6',
        'ipv6_helper' => 'The field under validation must be an IPv6 address.',
        'lover_case' => 'Lover case',
        'lover_case_helper' => 'The field under validation must be a lover case.',
        'mac_address' => 'Mac address',
        'mac_address_helper' => 'The field under validation must be a MAC address.',
        'nullable' => 'Nullable',
        'nullable_helper' => 'The field under validation may be null.',
        'numeric' => 'Numeric',
        'numeric_helper' => 'The field under validation must be a number.',
        'password' => 'Password',
        'password_helper' => 'The field under validation must be a valid password.',
        'prohibited' => 'Prohibited',
        'prohibited_helper' => 'The field under validation must not be present.',
        'required' => 'Required',
        'required_helper' => 'The field under validation must be present in the input data and not empty.',
        'string' => 'String',
        'string_helper' => 'The field under validation must be a string.',
        'upper_case' => 'Upper case',
        'upper_case_helper' => 'The field under validation must be a upper case.',
        'url' => 'Url',
        'url_helper' => 'The field under validation must be a valid URL.',
        'ulid' => 'ULID',
        'ulid_helper' => 'The field under validation must be a valid ULID.',
        'uuid' => 'UUID',
        'uuid_helper' => 'The field under validation must be a valid UUID.',
    ],
    'htmlType' => [
        'text' => 'Text',
        'email' => 'Email',
        'number' => 'Number',
        'date' => 'Date',
        'file' => 'File',
        'image' => 'Image',
        'password' => 'Password',
        'select' => 'SelectBox',
        'radio' => 'Radio',
        'checkbox' => 'CheckBox',
        'textarea' => 'TextArea',
        'toggle-switch' => 'Toggle Switch',
    ],
    'dbType' => [
        'increments' => 'Increments',
        'integer' => 'Integer',
        'smallInteger' => 'Small Integer',
        'longText' => 'Long Text',
        'bigInteger' => 'Big Integer',
        'double' => 'Double',
        'float' => 'Float',
        'decimal' => 'Decimal',
        'boolean' => 'Boolean',
        'string' => 'String',
        'char' => 'Char',
        'text' => 'Text',
        'mediumText' => 'Medium Text',
        'longText' => 'Long Text',
        'enum' => 'Enum',
        'binary' => 'Binary',
        'dateTime' => 'Date Time',
        'date' => 'Date',
        'timestamp' => 'Timestamp'
    ],
    'options' => [
        "title" => "Options",
        "soft_delete" => "Soft Delete",
        "save_schema" => "Save Schema",
        "swagger" => "Swagger",
        "localized" => "Localized",
        "test_cases" => "Test Cases",
        "datatables" => "Datatables",
        "migration" => "Migration",
        "force_migrate" => "Force Migrate",
        "activity_log" => "Activity Log",
        "media" => "Media",
        "factory" => "Factory",
        "lada_cache" => "Lada Cache",
    ],
    'commandType' => [
        'yusuftogtay:api_scaffold' => 'API Scaffold Generator',
        'yusuftogtay:api' => 'API Generator',
        'yusuftogtay:scaffold' => 'Scaffold Generator',
    ],
    'rules' => [
        'accepted' => 'Accepted',
        'active_url' => 'Active Url',
        'boolean' => 'Boolean',
        'after' => 'After',
        'after_or_equal' => 'After Or Equal',
        'alpha' => 'Alpha',
        'alpha_dash' => 'Alpha Dash',
        'alpha_num' => 'Alpha Num',
        'array' => 'Array',
        'ascii' => 'Ascii',
        'bail' => 'Bail',
        'before' => 'Before',
        'before_or_equal' => 'Before Or Equal',
        'between' => 'Between',
        'boolean' => 'Boolean',
        'confirmed' => 'Confirmed',
        'current_password' => 'Current Password',
        'date' => 'Date',
        'date_equals' => 'Date Equals',
        'date_format' => 'Date Format',
        'decimal' => 'Decimal',
        'declined' => 'Declined',
        'declined_if' => 'Declined If',
        'different' => 'Different',
        'digits' => 'Digits',
        'digits_between' => 'Digits Between',
        'dimensions' => 'Dimensions',
        'distinct' => 'Distinct',
        'dosent_start_with' => 'Dose Not Exist',
        'dosent_end_with' => 'Dose Not Exist',
        'email' => 'Email',
        'ends_with' => 'Ends With',
        'enum' => 'Enum',
        'exclude_if' => 'Exclude If',
        'exclude_unless' => 'Exclude Unless',
        'exclude' => 'Exclude',
        'exclude_without' => 'Exclude Without',
        'exists' => 'Exists',
        'file' => 'File',
        'filled' => 'Filled',
        'gt' => 'Gt',
        'gte' => 'Gte',
        'image' => 'Image',
        'in' => 'In',
        'in_array' => 'In Array',
        'integer' => 'Integer',
        'ip' => 'Ip',
        'ipv4' => 'Ipv4',
        'ipv6' => 'Ipv6',
        'json' => 'Json',
        'lt' => 'Lt',
        'lte' => 'Lte',
        'max' => 'Max',
        'lowercase' => 'Lowercase',
        'mac_address' => 'Mac Address',
        'mime_types' => 'Mime types',
        'mime_types_by_extensions' => 'Mime types by extensions',
        'min' => 'Min',
        'min_digit' => 'Min Digit',
        'missing' => 'Missing',
        'missing_if' => 'Missing If',
        'missing_with' => 'Missing With',
        'missing_with_all' => 'Missing With All',
        'missing_unless' => 'Missing Unless',
        'multiple_of' => 'Multiple Of',
        'not_in' => 'Not In',
        'not_regex' => 'Not Regex',
        'nullable' => 'Nullable',
        'numeric' => 'Numeric',
        'password' => 'Password',
        'present' => 'Present',
        'prohibited' => 'Prohibited',
        'prohibited_if' => 'Prohibited If',
        'prohibited_unless' => 'Prohibited Unless',
        'prohibits' => 'Prohibits',
        'regex' => 'Regex',
        'required' => 'Required',
        'required_if' => 'Required If',
        'required_unless' => 'Required Unless',
        'required_with' => 'Required With',
        'required_with_all' => 'Required With All',
        'required_without' => 'Required Without',
        'required_without_all' => 'Required Without All',
        'required_array_keys' => 'Required Array Keys',
        'same' => 'Same',
        'size' => 'Size',
        'sometimes' => 'Sometimes',
        'starts_with' => 'Starts With',
        'string' => 'String',
        'timezone' => 'Timezone',
        'unique' => 'Unique',
        'uppercase' => 'Uppercase',
        'url' => 'Url',
        'uuid' => 'Uuid',
        'ulid' => 'Ulid',
    ]
];
